* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  /* box-sizing: page by default gets bigger if you add padding or border of object; so with box-sizing, it goes inside of object instead of outside */
}

section.parent {
  width: 100%;
  height: 100vh; /* viewport height, meaning browser window's height */
  border: 20px solid #fff;
  background: #888;
  color: #fff;

  display: grid;
  /* I have 6 objects and it automatically gave me 6 rows */

  /* define columns; i could use pixels (tho pixels are not responsive); percent (tho dividing into 3 columns is hard because 33.33333% is annoying); fraction */
  /* this gives 3 columns */
  /* grid-template-columns: 100px 200px 100px; */

  grid-template-columns: 1fr 2fr 1fr; /* this is responsive; middle column takes two times the space */
  grid-template-rows: 1fr 3fr;
  grid-gap: 20px; /* gives a gap between each element - called gutter */
}

article {
  border-radius: 5px; /* gives rounded corners */
  font-size: 4vmax; /* it's the equivalent of saying 4%, vmax means whatever part of the browser window is bigger (ex: if the width is bigger on desktop, but height is bigger on phone), it will take 4% of the bigger one (so 4% of width or 4% of height)
  - the opposite is vmin: takes the smaller value*/
  background-color:#444;
  padding: 20px;
}

.a1 {
  background: cadetblue;
}
